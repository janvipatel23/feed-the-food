AWSTemplateFormatVersion: "2010-09-09"
Description: "Cognito Test Script"

Resources:
  DonarPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameConfiguration: 
        CaseSensitive: false
      AutoVerifiedAttributes:
        - email
      UserPoolName: donar-pool
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true

  DonarPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref DonarPool
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
        - http://localhost:3000
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO

  DonarPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: "react-janvi"
      UserPoolId: !Ref DonarPool

  NGOPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UsernameConfiguration: 
        CaseSensitive: false
      AutoVerifiedAttributes:
        - email
      UserPoolName: ngo-pool
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: false
          Required: true
        - Name: name
          AttributeDataType: String
          Mutable: true
          Required: true

  NGOPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref NGOPool
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
        - http://localhost:3000
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO

  NGOPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: "ngo-feed-the-food"
      UserPoolId: !Ref NGOPool